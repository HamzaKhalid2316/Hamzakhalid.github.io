# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy Jekyll with GitHub Pages dependencies preinstalled

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./
          destination: ./_site
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
            - name: Download a Build Artifact
  uses: actions/download-artifact@v4.3.0
  with:
    # Name of the artifact to download. If unspecified, all artifacts for the run are downloaded.
    name: # optional
    # IDs of the artifacts to download, comma-separated. Either inputs `artifact-ids` or `name` can be used, but not both.
    artifact-ids: # optional
    # Destination path. Supports basic tilde expansion. Defaults to $GITHUB_WORKSPACE
    path: # optional
    # A glob pattern matching the artifacts that should be downloaded. Ignored if name is specified.
    pattern: # optional
    # When multiple artifacts are matched, this changes the behavior of the destination directories. If true, the downloaded artifacts will be in the same directory specified by path. If false, the downloaded artifacts will be extracted into individual named directories within the specified path.
    merge-multiple: # optional, default is false
    # The GitHub token used to authenticate with the GitHub API. This is required when downloading artifacts from a different repository or from a different workflow run. If this is not specified, the action will attempt to download artifacts from the current repository and the current workflow run.
    github-token: # optional
    # The repository owner and the repository name joined together by "/". If github-token is specified, this is the repository that artifacts will be downloaded from.
    repository: # optional, default is ${{ github.repository }}
    # The id of the workflow run where the desired download artifact was uploaded from. If github-token is specified, this is the run that artifacts will be downloaded from.
    run-id: # optional, default is ${{ github.run_id }}
                      - name: Setup Java JDK
  uses: actions/setup-java@v3.14.1
  with:
    # The Java version to set up. Takes a whole or semver Java version. See examples of supported syntax in README file
    java-version: # optional
    # The path to the `.java-version` file. See examples of supported syntax in README file
    java-version-file: # optional
    # Java distribution. See the list of supported distributions in README file
    distribution: 
    # The package type (jdk, jre, jdk+fx, jre+fx)
    java-package: # optional, default is jdk
    # The architecture of the package (defaults to the action runner's architecture)
    architecture: # optional
    # Path to where the compressed JDK is located
    jdkFile: # optional
    # Set this option if you want the action to check for the latest available version that satisfies the version spec
    check-latest: # optional
    # ID of the distributionManagement repository in the pom.xml file. Default is `github`
    server-id: # optional, default is github
    # Environment variable name for the username for authentication to the Apache Maven repository. Default is $GITHUB_ACTOR
    server-username: # optional, default is GITHUB_ACTOR
    # Environment variable name for password or token for authentication to the Apache Maven repository. Default is $GITHUB_TOKEN
    server-password: # optional, default is GITHUB_TOKEN
    # Path to where the settings.xml file will be written. Default is ~/.m2.
    settings-path: # optional
    # Overwrite the settings.xml file if it exists. Default is "true".
    overwrite-settings: # optional, default is true
    # GPG private key to import. Default is empty string.
    gpg-private-key: # optional
    # Environment variable name for the GPG private key passphrase. Default is $GPG_PASSPHRASE.
    gpg-passphrase: # optional
    # Name of the build platform to cache dependencies. It can be "maven", "gradle" or "sbt".
    cache: # optional
    # Workaround to pass job status to post job step. This variable is not intended for manual setting
    job-status: # optional, default is ${{ job.status }}
    # The token used to authenticate when fetching version manifests hosted on github.com, such as for the Microsoft Build of OpenJDK. When running this action on github.com, the default value is sufficient. When running on GHES, you can pass a personal access token for github.com if you are experiencing rate limiting.
    token: # optional, default is ${{ github.server_url == 'https://github.com' && github.token || '' }}
    # Name of Maven Toolchain ID if the default name of "${distribution}_${java-version}" is not wanted. See examples of supported syntax in Advanced Usage file
    mvn-toolchain-id: # optional
    # Name of Maven Toolchain Vendor if the default name of "${distribution}" is not wanted. See examples of supported syntax in Advanced Usage file
    mvn-toolchain-vendor: # optional
                      - name: Cache
  uses: actions/cache@v4.2.3
  with:
    # A list of files, directories, and wildcard patterns to cache and restore
    path: 
    # An explicit key for restoring and saving the cache
    key: 
    # An ordered multiline string listing the prefix-matched keys, that are used for restoring stale cache if no cache hit occurred for key. Note `cache-hit` returns false in this case.
    restore-keys: # optional
    # The chunk size used to split up large files during upload, in bytes
    upload-chunk-size: # optional
    # An optional boolean when enabled, allows windows runners to save or restore caches that can be restored or saved respectively on other platforms
    enableCrossOsArchive: # optional, default is false
    # Fail the workflow if cache entry is not found
    fail-on-cache-miss: # optional, default is false
    # Check if a cache entry exists for the given input(s) (key, restore-keys) without downloading the cache
    lookup-only: # optional, default is false
    # Run the post step to save the cache even if another step before fails
    save-always: # optional, default is false
                      - name: Setup Go environment
  uses: actions/setup-go@v5.5.0
  with:
    # The Go version to download (if necessary) and use. Supports semver spec and ranges. Be sure to enclose this option in single quotation marks.
    go-version: # optional
    # Path to the go.mod or go.work file.
    go-version-file: # optional
    # Set this option to true if you want the action to always check for the latest available version that satisfies the version spec
    check-latest: # optional
    # Used to pull Go distributions from go-versions. Since there's a default, this is typically not supplied by the user. When running this action on github.com, the default value is sufficient. When running on GHES, you can pass a personal access token for github.com if you are experiencing rate limiting.
    token: # optional, default is ${{ github.server_url == 'https://github.com' && github.token || '' }}
    # Used to specify whether caching is needed. Set to true, if you'd like to enable caching.
    cache: # optional, default is true
    # Used to specify the path to a dependency file - go.sum
    cache-dependency-path: # optional
    # Target architecture for Go to use. Examples: x86, x64. Will use system architecture by default.
    architecture: # optional
                      - name: AI Inference
  uses: actions/ai-inference@v1.1.0
  with:
    # The prompt for the model
    prompt: # optional, default is 
    # Path to a file containing the prompt
    prompt-file: # optional, default is 
    # The model to use
    model: # optional, default is openai/gpt-4o
    # The endpoint to use
    endpoint: # optional, default is https://models.github.ai/inference
    # The system prompt for the model
    system-prompt: # optional, default is You are a helpful assistant
    # Path to a file containing the system prompt
    system-prompt-file: # optional, default is 
    # The maximum number of tokens to generate
    max-tokens: # optional, default is 200
    # The token to use
    token: # optional, default is ${{ github.token }}
                      - name: Online Portfolio Generator
  # You may pin to the exact commit or the version.
  # uses: VICTORJOSEARAVENALANDE/portfolio-generator@7011b09b255ad87813dba621b76bba4bc94bc7dc
  uses: VICTORJOSEARAVENALANDE/portfolio-generator@v1.0
  with:
    # Git committer name
    name: 
    # Git committer email
    email: 
                      - name: PortfolioFy
  # You may pin to the exact commit or the version.
  # uses: kaustubhgupta/PortfolioFy@26613f58457e021bf1f420c4d81626ff284100cd
  uses: kaustubhgupta/PortfolioFy@v3.2.1
  with:
    # Github Personal Access token
    gh_token: 
    # Type of webpage you want to render
    theme: # optional, default is 1
    # Include blogs in your Portfolio
    blogs: # optional
    # Include hackathon projects.
    hackathons: # optional
    # Type of GitHub Stats
    stats_choice: # optional, default is 1
    # Custom parameters for the GitHub stats choosen
    stats_customization: # optional
    # Path of the current Repo
    current_repo_path: # optional, default is ${{ github.workspace }}
    # Name of the current branch
    current_repo_branch: # optional, default is ${{ github.ref }}
    # Link for resume pdf uploaded online
    resume_link: # optional
    # Display Creator Credits
    allow_footer: # optional, default is true
    # Sorting the projects according to count of number of stars or forks
    project_sort_by: # optional, default is stars
    # Linkedin, Twitter, Stackoverflow, Medium, Devto
    social_links: # optional
                      - name: LinkedIn Marketing Workflow
  # You may pin to the exact commit or the version.
  # uses: p4p1/linkedin-marketing-workflow@dca7c46c7071726a6f4c55a42c3c78dd986d0afc
  uses: p4p1/linkedin-marketing-workflow@v0.1
  with:
    # rss feed link
    rss_feed: 
    # LinkedIn token for API requests
    LINKEDIN_SECRET: 
    # GitHub token
    GITHUB_TOKEN: 
    # Path of the text file to store last posted
    FILE_PATH: # optional, default is ./assets/lastposted.txt
    # username of committing bot
    commiter_username: # optional, default is lkn-p4p1-bot
    # email of committing bot
    commiter_email: # optional, default is p4p1@lkn.bot
    # message of committing bot
    commit_message: # optional, default is LinkedIn Marketing commit bot
                      - name: Advent of Code Data Generator
  # You may pin to the exact commit or the version.
  # uses: wiktoriavh/aoc-widget-data-generator@71c4fb5858827e84f006b0be7549babec11b9f67
  uses: wiktoriavh/aoc-widget-data-generator@v1
  with:
    # Year of your Advent of Code Solutions
    year: 
    # Language you solved the puzzles in
    language: 
    # username/repo-name of your repository
    repo:             - name: PR Automation
  # You may pin to the exact commit or the version.
  # uses: devjoes/pr-automation@b9f61eef9e676ad2253aa4a08a2313468e7e57b7
  uses: devjoes/pr-automation@v0.1.0
  with:
    # Token to authenticate with when connecting to Github
    token: 
    # Label of PRs to be automatically closed (or * for all PRs)
    autoCloseLabel: # optional, default is auto-close
    # Label of PRs to be automatically merged (or * for all PRs)
    autoMergeLabel: # optional, default is auto-merge
    # Warn user their PR will be closed after it has been open for x duration (can be specified as 1s,2m,3h etc)
    warnClosingAfter: # optional, default is 3d
    # Auto close PRs x duration after author has been warned (can be specified as 1s,2m,3h etc)
    autoCloseAfterWarn: # optional, default is 1d
    # Comment to post on PRs that are closing soon
    closingSoonComment: # optional, default is This pull request is inactive and will be closed at @closeTime
    # Label to apply to PRs that are closing soon
    closingSoonLabel: # optional, default is closing-soon
    # Delete branch once PR has been merged
    deleteOnMerge: # optional, default is false
    # Delete branch if PR is closed
    deleteOnClose: # optional, default is false
    # PRs where these branches are the base or head will be ignored.
    branchBlackList: # default is master
                      - name: PR Automation
  # You may pin to the exact commit or the version.
  # uses: devjoes/pr-automation@b9f61eef9e676ad2253aa4a08a2313468e7e57b7
  uses: devjoes/pr-automation@v0.1.0
  with:
    # Token to authenticate with when connecting to Github
    token: 
    # Label of PRs to be automatically closed (or * for all PRs)
    autoCloseLabel: # optional, default is auto-close
    # Label of PRs to be automatically merged (or * for all PRs)
    autoMergeLabel: # optional, default is auto-merge
    # Warn user their PR will be closed after it has been open for x duration (can be specified as 1s,2m,3h etc)
    warnClosingAfter: # optional, default is 3d
    # Auto close PRs x duration after author has been warned (can be specified as 1s,2m,3h etc)
    autoCloseAfterWarn: # optional, default is 1d
    # Comment to post on PRs that are closing soon
    closingSoonComment: # optional, default is This pull request is inactive and will be closed at @closeTime
    # Label to apply to PRs that are closing soon
    closingSoonLabel: # optional, default is closing-soon
    # Delete branch once PR has been merged
    deleteOnMerge: # optional, default is false
    # Delete branch if PR is closed
    deleteOnClose: # optional, default is false
    # PRs where these branches are the base or head will be ignored.
    branchBlackList: # default is master
                      - name: PR Automation
  # You may pin to the exact commit or the version.
  # uses: devjoes/pr-automation@b9f61eef9e676ad2253aa4a08a2313468e7e57b7
  uses: devjoes/pr-automation@v0.1.0
  with:
    # Token to authenticate with when connecting to Github
    token: 
    # Label of PRs to be automatically closed (or * for all PRs)
    autoCloseLabel: # optional, default is auto-close
    # Label of PRs to be automatically merged (or * for all PRs)
    autoMergeLabel: # optional, default is auto-merge
    # Warn user their PR will be closed after it has been open for x duration (can be specified as 1s,2m,3h etc)
    warnClosingAfter: # optional, default is 3d
    # Auto close PRs x duration after author has been warned (can be specified as 1s,2m,3h etc)
    autoCloseAfterWarn: # optional, default is 1d
    # Comment to post on PRs that are closing soon
    closingSoonComment: # optional, default is This pull request is inactive and will be closed at @closeTime
    # Label to apply to PRs that are closing soon
    closingSoonLabel: # optional, default is closing-soon
    # Delete branch once PR has been merged
    deleteOnMerge: # optional, default is false
    # Delete branch if PR is closed
    deleteOnClose: # optional, default is false
    # PRs where these branches are the base or head will be ignored.
    branchBlackList: # default is master
          
    # Directory of your solutions.
    directory: 
    # Output directory of the result.
    output: # optional, default is ./
                      - name: Upload a Build Artifact
  uses: actions/upload-artifact@v4.6.2
  with:
    # Artifact name
    name: # optional, default is artifact
    # A file, directory or wildcard pattern that describes what to upload
    path: 
    # The desired behavior if no files are found using the provided path.
Available Options:
  warn: Output a warning but do not fail the action
  error: Fail the action with an error message
  ignore: Do not output any warnings or errors, the action does not fail

    if-no-files-found: # optional, default is warn
    # Duration after which artifact will expire in days. 0 means using default retention.
Minimum 1 day. Maximum 90 days unless changed from the repository settings page.

    retention-days: # optional
    # The level of compression for Zlib to be applied to the artifact archive. The value can range from 0 to 9: - 0: No compression - 1: Best speed - 6: Default compression (same as GNU Gzip) - 9: Best compression Higher levels will result in better compression, but will take longer to complete. For large files that are not easily compressed, a value of 0 is recommended for significantly faster uploads.

    compression-level: # optional, default is 6
    # If true, an artifact with a matching name will be deleted before a new one is uploaded. If false, the action will fail if an artifact for the given name already exists. Does not fail if the artifact does not exist.

    overwrite: # optional, default is false
    # If true, hidden files will be included in the artifact. If false, hidden files will be excluded from the artifact.

    include-hidden-files: # optional, default is false
                      - name: apkmod-automation
  # You may pin to the exact commit or the version.
  # uses: mon231/apkpatcher@a3bfd1751e98984beac0d205ab2c17fee2f2d7ea
  uses: mon231/apkpatcher@v1.3.0
  with:
    # Path to original apk file
    original-apk: 
    # Path to output apk file
    output-apk: 
    # Path to frida js script to inject
    frida-script: 
    # Name of build artifact to upload
    artifact-name: # optional, default is 
          
